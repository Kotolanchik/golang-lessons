package main

import "fmt"

func main() {
	v := 5
	p := &v
	fmt.Print(*p, " ")
	changePointer(p)
	fmt.Print(*p)
}

// разыменование указатель и замена значения по этому адресу
func changePointer(p *int) {
	v := 3
	*p = v
}

// здесь создается локальный указатель, который будет не используемым после завершения блока
func changePointer1(p *int) {
	v := 3
	p = &v
}

// указатель на указатель
func changePointer2(p **int) {
	v := 3
	*p = &v
}

//Простой указатель (*int):
//
//Хранит адрес в памяти переменной определенного типа данных (например, int).
//Может использоваться для доступа и изменения значения по этому адресу.
//var x int
//var ptr *int = &x

//Указатель на указатель (**int):
//
//Хранит адрес простого указателя (*int).
//Используется, когда нужно изменить указатель в вызывающем коде, а не просто значение по адресу.
//Часто используется, например, при передаче указателя в функцию для изменения самого указателя.
//var y int
//var ptr *int = &y
//var doublePtr **int = &ptr
