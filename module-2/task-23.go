package main

import "fmt"

func main() {
	fmt.Println(divide(15, 5))
	fmt.Println(divide(4, 0))
	fmt.Println("Program has been finished")
}
func divid_1(x, y float64) float64 {
	if y == 0 {
		panic("division by zero!")
	}
	return x / y
}

//Практика критерий истины. На go всегда проще написать:
//val,_ = func_with_val_and_err();
//и забить. Чем осознано что-то делать с переменной ошибки. В то время как исключения вынуждают их как-то обрабатывать, чтобы программа хоть как-то продолжалась. Так то с изложенными тезисами не соглашаюсь, имхо, все обстоит ровно наоборот.
//Было бы интересно обследовать сорцы существующих программ на го - как часто там вместо имени переменной для ошибки стоит "_"?
